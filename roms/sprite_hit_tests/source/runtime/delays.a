; to do: delay loops that take only a single count
      
; Delay for almost A milliseconds (A * 0.999009524 msec)
; Preserved: X, Y
delay_msec:
      pha                     ; 3
      lda   #253              ; 2
      sec                     ; 2
delay_msec_:
      nop                     ; 2
      adc   #-2               ; 2
      bne   delay_msec_       ; 3
                              ; -1
      pla                     ; 4
      clc                     ; 2
      adc   #-1               ; 2
      bne   delay_msec        ; 3
      rts
      .code

; Delay for almost 'A / 10' milliseconds (A * 0.099453968 msec)
; Preserved: X, Y
delay_01msec:
      pha                     ; 3
      lda   #18               ; 2
      sec                     ; 2
delay_01msec_:
      nop                     ; 2
      nop                     ; 2
      adc   #-2               ; 2
      bne   delay_01msec_     ; 3
                              ; -1
      pla                     ; 4
      clc                     ; 2
      adc   #-1               ; 2
      bne   delay_01msec      ; 3
      rts
      .code

; Delay n clocks
; Preserved: P, A, X, Y
delay_32:   nop
delay_30:   nop
delay_28:   nop
delay_26:   nop
delay_24:   nop
delay_22:   nop
delay_20:   nop
delay_18:   nop
delay_16:   nop
delay_14:   nop
delay_12:   rts

delay_33:   nop
delay_31:   nop
delay_29:   nop
delay_27:   nop
delay_25:   nop
delay_23:   nop
delay_21:   nop
delay_1